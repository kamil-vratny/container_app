version: 0.2

phases:
    pre_build:
        commands:
            - echo Logging in to Amazon ECR...
            - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/q7c2w2w2
            - REPOSITORY_URI=public.ecr.aws/q7c2w2w2/demoapp-backend
            - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
            - IMAGE_TAG=${COMMIT_HASH:=latest}
    build:
        commands:
            - echo Build started on `date`
            - echo Building the Docker image...
            - docker build -t $REPOSITORY_URI:latest .
            - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
    post_build:
        commands:
            - echo Build completed on `date`
            - echo Pushing the Docker images...
            - docker push $REPOSITORY_URI:latest
            - docker push $REPOSITORY_URI:$IMAGE_TAG
            - aws ecs describe-task-definition --task-definition cv-dev-task-definition-web |
              jq '.taskDefinition' |
              jq 'del(.taskDefinitionArn,.revision,.registeredAt,.registeredBy,.requiresAttributes)' |
              jq '.containerDefinitions[0].image = "'"$REPOSITORY_URL:$IMAGE_TAG"'"' > taskdef.json
            - >
                echo '
                    version: 0.0
                    Resources:
                        - TargetService:
                            Type: AWS::ECS::Service
                            Properties:
                                TaskDefinition: 
                                LoadBalancerInfo:
                                    ContainerName: "web"
                                    ContainerPort: 80
                                CapacityProviderStrategy:
                                    - CapacityProvider: "'"$ECS_CAPACITY_PROVIDER"'"
                                Base: 1
                                Weight: 100
                 ' > appspec.yml

artifacts:
    files:
        - appspec.yml
        - taskdef.json
